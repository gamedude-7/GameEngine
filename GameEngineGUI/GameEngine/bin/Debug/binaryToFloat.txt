float IEEE_754_to_float(byte[] raw) {
    int sign = (raw[0] >> 7) !=0 ? -1 : 1;
    int iExponent = (raw[0] << 1) + (raw[1] >> 7);
    int exponent = iExponent - 127;            
    int b = (raw[1] & 0x7F);
    int c = b << 16;

    int mantissa_bits = ((raw[1] & 0x7F) << 16) + (raw[2] << 8) + raw[3];
    int numOfZeros = 0;
    int numOfBitsInMantissa = 0;
    int a = 0;
    for (int i = 23; i >= 1; i--)
    {
        a = (mantissa_bits >> (23 - i)) & 1;
        if (a == 0)
            numOfZeros++;
        else
            break;
    }
    int normalizedMantissa = mantissa_bits >> numOfZeros;
    numOfBitsInMantissa = 23 - numOfZeros;
    
    float fMantissa = 0;
  
    float x = 0;
   
    for (int ii = 1; ii <= 23; ++ii)
    {
        x = (mantissa_bits >> (23 - ii)) & 1;
        x *= 2;
        if (x > 0)
        {         
            fMantissa += (float)Math.Pow(x, -ii);
        }
    }
    fMantissa += 1.0f;
   
    float fExponent = (float)Math.Pow(2.0, exponent);
    float result = sign * fMantissa * fExponent;
    
    return result;
}